package planner.file.reader;
import java.io.InputStream;
import multiblock.configuration.Configuration;
import multiblock.configuration.overhaul.OverhaulConfiguration;
import multiblock.configuration.overhaul.fissionsfr.Block;
import multiblock.configuration.overhaul.fissionsfr.BlockRecipe;
import multiblock.configuration.overhaul.fissionsfr.CoolantRecipe;
import multiblock.configuration.overhaul.fissionsfr.FissionSFRConfiguration;
import multiblock.configuration.overhaul.fissionsfr.PlacementRule;
import planner.Core;
import planner.file.ForgeConfig;
import planner.file.FormatReader;
import planner.file.NCPFFile;
import simplelibrary.config2.Config;
import simplelibrary.config2.ConfigList;
public class OverhaulNCConfigReader implements FormatReader{
    @Override
    public boolean formatMatches(InputStream in){
        return ForgeConfig.parse(in).getConfig("fission").hasProperty("fission_sink_cooling_rate");
    }
    @Override
    public synchronized NCPFFile read(InputStream in){
        Config config = ForgeConfig.parse(in);
        Config fission = config.get("fission");
        Config turbine = config.get("turbine");
        NCPFFile ncpf = new NCPFFile();
        ncpf.configuration = new Configuration("NuclearCraft", "Unknown", null);
        ncpf.configuration.overhaul = new OverhaulConfiguration();
        //<editor-fold defaultstate="collapsed" desc="Fission SFR">
        ncpf.configuration.overhaul.fissionSFR = new FissionSFRConfiguration();
        Block controller = Block.controller("nuclearcraft:solid_fission_controller", "Solid Fission Controller", "overhaul/controller");
        Block casing = Block.casing("nuclearcraft:fission_casing", "Reactor Casing", "overhaul/casing", true);
        Block transparentCasing = Block.casing("nuclearcraft:fission_glass", "Reactor Glass", "overhaul/glass", false);
        Block vent = Block.vent("nuclearcraft:fission_vent", "Vent (Input)", "overhaul/vent", "Vent (Output)", "overhaul/vent_output");
        ncpf.configuration.overhaul.fissionSFR.blocks.add(controller);ncpf.configuration.overhaul.fissionSFR.allBlocks.add(controller);
        ncpf.configuration.overhaul.fissionSFR.blocks.add(casing);ncpf.configuration.overhaul.fissionSFR.allBlocks.add(casing);
        ncpf.configuration.overhaul.fissionSFR.blocks.add(transparentCasing);ncpf.configuration.overhaul.fissionSFR.allBlocks.add(transparentCasing);
        ncpf.configuration.overhaul.fissionSFR.blocks.add(vent);ncpf.configuration.overhaul.fissionSFR.allBlocks.add(vent);
        ncpf.configuration.overhaul.fissionSFR.coolingEfficiencyLeniency = fission.getInt("fission_cooling_efficiency_leniency");
        ncpf.configuration.overhaul.fissionSFR.minSize = fission.getInt("fission_min_size");
        ncpf.configuration.overhaul.fissionSFR.maxSize = fission.getInt("fission_max_size");
        ncpf.configuration.overhaul.fissionSFR.neutronReach = fission.getInt("fission_neutron_reach");
        double fuelTimeMult = fission.getDouble("fission_fuel_time_multiplier");
        ConfigList sparsity = fission.getConfigList("fission_sparsity_penalty_params");
        ncpf.configuration.overhaul.fissionSFR.sparsityPenaltyMult = (float) sparsity.getDouble(0);
        ncpf.configuration.overhaul.fissionSFR.sparsityPenaltyThreshold = (float) sparsity.getDouble(1);
        ConfigList sourceEfficiency = fission.getConfigList("fission_source_efficiency");
        Block rabe = Block.source("nuclearcraft:fission_source:0", "Ra-Be Neutron Source", "overhaul/ra-be", (float) sourceEfficiency.getDouble(0));
        Block pobe = Block.source("nuclearcraft:fission_source:1", "Po-Be Neutron Source", "overhaul/po-be", (float) sourceEfficiency.getDouble(1));
        Block cf252 = Block.source("nuclearcraft:fission_source:2", "Cf-252 Neutron Source", "overhaul/cf-252", (float) sourceEfficiency.getDouble(2));
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(rabe);ncpf.configuration.overhaul.fissionSFR.blocks.add(rabe);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(pobe);ncpf.configuration.overhaul.fissionSFR.blocks.add(pobe);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(cf252);ncpf.configuration.overhaul.fissionSFR.blocks.add(cf252);
        ConfigList coolingRates = fission.getConfigList("fission_sink_cooling_rate");
        ConfigList rules = fission.getConfigList("fission_sink_rule");
        Block water = Block.heatsink("nuclearcraft:solid_fission_sink:0", "Water Heat Sink", coolingRates.getInt(0), "overhaul/water");
        Block iron = Block.heatsink("nuclearcraft:solid_fission_sink:1", "Iron Heat Sink", coolingRates.getInt(1), "overhaul/iron");
        Block redstone = Block.heatsink("nuclearcraft:solid_fission_sink:2", "Redstone Heat Sink", coolingRates.getInt(2), "overhaul/redstone");
        Block quartz = Block.heatsink("nuclearcraft:solid_fission_sink:3", "Quartz Heat Sink", coolingRates.getInt(3), "overhaul/quartz");
        Block obsidian = Block.heatsink("nuclearcraft:solid_fission_sink:4", "Obsidian Heat Sink", coolingRates.getInt(4), "overhaul/obsidian");
        Block netherBrick = Block.heatsink("nuclearcraft:solid_fission_sink:5", "Nether Brick Heat Sink", coolingRates.getInt(5), "overhaul/nether brick");
        Block glowstone = Block.heatsink("nuclearcraft:solid_fission_sink:6", "Glowstone Heat Sink", coolingRates.getInt(6), "overhaul/glowstone");
        Block lapis = Block.heatsink("nuclearcraft:solid_fission_sink:7", "Lapis Heat Sink", coolingRates.getInt(7), "overhaul/lapis");
        Block gold = Block.heatsink("nuclearcraft:solid_fission_sink:8", "Gold Heat Sink", coolingRates.getInt(8), "overhaul/gold");
        Block prismarine = Block.heatsink("nuclearcraft:solid_fission_sink:9", "Prismarine Heat Sink", coolingRates.getInt(9), "overhaul/prismarine");
        Block slime = Block.heatsink("nuclearcraft:solid_fission_sink:10", "Slime Heat Sink", coolingRates.getInt(10), "overhaul/slime");
        Block endStone = Block.heatsink("nuclearcraft:solid_fission_sink:11", "End Stone Heat Sink", coolingRates.getInt(11), "overhaul/end stone");
        Block purpur = Block.heatsink("nuclearcraft:solid_fission_sink:12", "Purpur Heat Sink", coolingRates.getInt(12), "overhaul/purpur");
        Block diamond = Block.heatsink("nuclearcraft:solid_fission_sink:13", "Diamond Heat Sink", coolingRates.getInt(13), "overhaul/diamond");
        Block emerald = Block.heatsink("nuclearcraft:solid_fission_sink:14", "Emerald Heat Sink", coolingRates.getInt(14), "overhaul/emerald");
        Block copper = Block.heatsink("nuclearcraft:solid_fission_sink:15", "Copper Heat Sink", coolingRates.getInt(15), "overhaul/copper");
        Block tin = Block.heatsink("nuclearcraft:solid_fission_sink2:0", "Tin Heat Sink", coolingRates.getInt(16), "overhaul/tin");
        Block lead = Block.heatsink("nuclearcraft:solid_fission_sink2:1", "Lead Heat Sink", coolingRates.getInt(17), "overhaul/lead");
        Block boron = Block.heatsink("nuclearcraft:solid_fission_sink2:2", "Boron Heat Sink", coolingRates.getInt(18), "overhaul/boron");
        Block lithium = Block.heatsink("nuclearcraft:solid_fission_sink2:3", "Lithium Heat Sink", coolingRates.getInt(19), "overhaul/lithium");
        Block magnesium = Block.heatsink("nuclearcraft:solid_fission_sink2:4", "Magnesium Heat Sink", coolingRates.getInt(20), "overhaul/magnesium");
        Block manganese = Block.heatsink("nuclearcraft:solid_fission_sink2:5", "Manganese Heat Sink", coolingRates.getInt(21), "overhaul/manganese");
        Block aluminum = Block.heatsink("nuclearcraft:solid_fission_sink2:6", "Aluminum Heat Sink", coolingRates.getInt(22), "overhaul/aluminum");
        Block silver = Block.heatsink("nuclearcraft:solid_fission_sink2:7", "Silver Heat Sink", coolingRates.getInt(23), "overhaul/silver");
        Block fluorite = Block.heatsink("nuclearcraft:solid_fission_sink2:8", "Fluorite Heat Sink", coolingRates.getInt(24), "overhaul/fluorite");
        Block villiaumite = Block.heatsink("nuclearcraft:solid_fission_sink2:9", "Villiaumite Heat Sink", coolingRates.getInt(25), "overhaul/villiaumite");
        Block carobbiite = Block.heatsink("nuclearcraft:solid_fission_sink2:10", "Carobbiite Heat Sink", coolingRates.getInt(26), "overhaul/carobbiite");
        Block arsenic = Block.heatsink("nuclearcraft:solid_fission_sink2:11", "Arsenic Heat Sink", coolingRates.getInt(27), "overhaul/arsenic");
        Block nitrogen = Block.heatsink("nuclearcraft:solid_fission_sink2:12", "Liquid Nitrogen Heat Sink", coolingRates.getInt(28), "overhaul/nitrogen");
        Block helium = Block.heatsink("nuclearcraft:solid_fission_sink2:13", "Liquid Helium Heat Sink", coolingRates.getInt(29), "overhaul/helium");
        Block enderium = Block.heatsink("nuclearcraft:solid_fission_sink2:14", "Enderium Heat Sink", coolingRates.getInt(30), "overhaul/enderium");
        Block cryotheum = Block.heatsink("nuclearcraft:solid_fission_sink2:15", "Cryotheum Heat Sink", coolingRates.getInt(31), "overhaul/cryotheum");
        Block cell = Block.cell("nuclearcraft:solid_fission_cell", "Fuel Cell", "overhaul/cell");
        Block cellPort = Block.port(cell, "nuclearcraft:fission_cell_port", "Fuel Cell Port (Input)", "overhaul/cell_port_input", "Fuel Cell Port (Output)", "overhaul/cell_port_output");
        cell.port = cellPort;
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(cell);ncpf.configuration.overhaul.fissionSFR.blocks.add(cell);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(cell.port);ncpf.configuration.overhaul.fissionSFR.blocks.add(cell.port);
        Block irradiator = Block.irradiator("nuclearcraft:fission_irradiator", "Neutron Irradiator", "overhaul/irradiator");
        Block irradiatorPort = Block.port(irradiator, "nuclearcraft:fission_irradiator_port", "Neutron Irradiator Port (Input)", "overhaul/irradiator_port_input", "Neutron Irradiator Port (Output)", "overhaul/irradiator_port_output");
        irradiator.port = irradiatorPort;
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(irradiator);ncpf.configuration.overhaul.fissionSFR.blocks.add(irradiator);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(irradiator.port);ncpf.configuration.overhaul.fissionSFR.blocks.add(irradiator.port);
        Block conductor = Block.conductor("nuclearcraft:fission_conductor", "Conductor", "overhaul/conductor");
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(conductor);ncpf.configuration.overhaul.fissionSFR.blocks.add(conductor);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(water);ncpf.configuration.overhaul.fissionSFR.blocks.add(water);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(iron);ncpf.configuration.overhaul.fissionSFR.blocks.add(iron);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(redstone);ncpf.configuration.overhaul.fissionSFR.blocks.add(redstone);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(quartz);ncpf.configuration.overhaul.fissionSFR.blocks.add(quartz);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(obsidian);ncpf.configuration.overhaul.fissionSFR.blocks.add(obsidian);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(netherBrick);ncpf.configuration.overhaul.fissionSFR.blocks.add(netherBrick);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(glowstone);ncpf.configuration.overhaul.fissionSFR.blocks.add(glowstone);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(lapis);ncpf.configuration.overhaul.fissionSFR.blocks.add(lapis);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(gold);ncpf.configuration.overhaul.fissionSFR.blocks.add(gold);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(prismarine);ncpf.configuration.overhaul.fissionSFR.blocks.add(prismarine);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(slime);ncpf.configuration.overhaul.fissionSFR.blocks.add(slime);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(endStone);ncpf.configuration.overhaul.fissionSFR.blocks.add(endStone);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(purpur);ncpf.configuration.overhaul.fissionSFR.blocks.add(purpur);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(diamond);ncpf.configuration.overhaul.fissionSFR.blocks.add(diamond);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(emerald);ncpf.configuration.overhaul.fissionSFR.blocks.add(emerald);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(copper);ncpf.configuration.overhaul.fissionSFR.blocks.add(copper);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(tin);ncpf.configuration.overhaul.fissionSFR.blocks.add(tin);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(lead);ncpf.configuration.overhaul.fissionSFR.blocks.add(lead);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(boron);ncpf.configuration.overhaul.fissionSFR.blocks.add(boron);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(lithium);ncpf.configuration.overhaul.fissionSFR.blocks.add(lithium);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(magnesium);ncpf.configuration.overhaul.fissionSFR.blocks.add(magnesium);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(manganese);ncpf.configuration.overhaul.fissionSFR.blocks.add(manganese);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(aluminum);ncpf.configuration.overhaul.fissionSFR.blocks.add(aluminum);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(silver);ncpf.configuration.overhaul.fissionSFR.blocks.add(silver);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(fluorite);ncpf.configuration.overhaul.fissionSFR.blocks.add(fluorite);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(villiaumite);ncpf.configuration.overhaul.fissionSFR.blocks.add(villiaumite);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(carobbiite);ncpf.configuration.overhaul.fissionSFR.blocks.add(carobbiite);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(arsenic);ncpf.configuration.overhaul.fissionSFR.blocks.add(arsenic);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(nitrogen);ncpf.configuration.overhaul.fissionSFR.blocks.add(nitrogen);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(helium);ncpf.configuration.overhaul.fissionSFR.blocks.add(helium);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(enderium);ncpf.configuration.overhaul.fissionSFR.blocks.add(enderium);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(cryotheum);ncpf.configuration.overhaul.fissionSFR.blocks.add(cryotheum);
        water.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(0)));
        iron.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(1)));
        redstone.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(2)));
        quartz.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(3)));
        obsidian.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(4)));
        netherBrick.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(5)));
        glowstone.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(6)));
        lapis.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(7)));
        gold.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(8)));
        prismarine.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(9)));
        slime.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(10)));
        endStone.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(11)));
        purpur.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(12)));
        diamond.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(13)));
        emerald.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(14)));
        copper.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(15)));
        tin.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(16)));
        lead.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(17)));
        boron.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(18)));
        lithium.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(19)));
        magnesium.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(20)));
        manganese.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(21)));
        aluminum.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(22)));
        silver.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(23)));
        fluorite.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(24)));
        villiaumite.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(25)));
        carobbiite.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(26)));
        arsenic.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(27)));
        nitrogen.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(28)));
        helium.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(29)));
        enderium.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(30)));
        cryotheum.rules.add(PlacementRule.parseNC(ncpf.configuration.overhaul.fissionSFR, rules.getString(31)));
        ConfigList fluxFac = fission.getConfigList("fission_moderator_flux_factor");
        ConfigList modEff = fission.getConfigList("fission_moderator_efficiency");
        Block graphite = Block.moderator("nuclearcraft:ingot_block:8", "Graphite Moderator", "overhaul/graphite", fluxFac.getInt(0), (float) modEff.getDouble(0));
        Block beryllium = Block.moderator("nuclearcraft:ingot_block:9", "Beryllium Moderator", "overhaul/beryllium", fluxFac.getInt(1), (float) modEff.getDouble(1));
        Block heavyWater = Block.moderator("nuclearcraft:heavy_water_moderator", "Heavy Water Moderator", "overhaul/heavy water", fluxFac.getInt(2), (float) modEff.getDouble(2));
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(graphite);ncpf.configuration.overhaul.fissionSFR.blocks.add(graphite);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(beryllium);ncpf.configuration.overhaul.fissionSFR.blocks.add(beryllium);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(heavyWater);ncpf.configuration.overhaul.fissionSFR.blocks.add(heavyWater);
        ConfigList refEff = fission.getConfigList("fission_reflector_efficiency");
        ConfigList refRef = fission.getConfigList("fission_reflector_reflectivity");
        Block bec = Block.reflector("nuclearcraft:fission_reflector:0", "Beryllium-Carbon Reflector", "overhaul/beryllium-carbon", (float) refEff.getDouble(0), (float) refRef.getDouble(0));
        Block pbs = Block.reflector("nuclearcraft:fission_reflector:1", "Lead-Steel Reflector", "overhaul/lead-steel", (float) refEff.getDouble(1), (float) refRef.getDouble(1));
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(bec);ncpf.configuration.overhaul.fissionSFR.blocks.add(bec);
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(pbs);ncpf.configuration.overhaul.fissionSFR.blocks.add(pbs);
        ConfigList shieldHeat = fission.getConfigList("fission_shield_heat_per_flux");
        ConfigList shieldEff = fission.getConfigList("fission_shield_efficiency");
        Block bag = Block.shield("nuclearcraft:fission_shield:0", "Boron-Silver Neutron Shield", "overhaul/boron-silver", "overhaul/boron-silver_closed", (int) shieldHeat.getDouble(0), (float) shieldEff.getDouble(0));
        ncpf.configuration.overhaul.fissionSFR.allBlocks.add(bag);ncpf.configuration.overhaul.fissionSFR.blocks.add(bag);
        ConfigList irrHeat = fission.getConfigList("fission_irradiator_heat_per_flux");
        ConfigList irrEff = fission.getConfigList("fission_irradiator_efficiency");
        BlockRecipe irrec1 = BlockRecipe.irradiatorRecipe("nuclearcraft:dust:3", "Thorium Dust", "overhaul/item/thorium_dust", "nuclearcraft:fission_dust:3", "Protactinium-Enriched Thorium Dust", "overhaul/item/protactinium_enriched_thorium_dust", (float)irrEff.getDouble(0), (float)irrHeat.getDouble(0));
        irrec1.inputLegacyNames.add("Thorium to Protactinium-Enriched Thorium");
        BlockRecipe irrec2 = BlockRecipe.irradiatorRecipe("nuclearcraft:fission_dust:3", "Protactinium-Enriched Thorium Dust", "overhaul/item/protactinium_enriched_thorium_dust", "nuclearcraft:fission_dust:4", "Protactinium-233 Dust", "overhaul/item/protactinium_dust", (float)irrEff.getDouble(1), (float)irrHeat.getDouble(1));
        irrec2.inputLegacyNames.add("Protactinium-Enriched Thorium to Protactinium-233");
        BlockRecipe irrec3 = BlockRecipe.irradiatorRecipe("nuclearcraft:fission_dust:0", "Bismuth Dust", "overhaul/item/bismuth_dust", "nuclearcraft:fission_dust:2", "Polonium Dust", "overhaul/item/polonium_dust", (float)irrEff.getDouble(2), (float)irrHeat.getDouble(2));
        irrec3.inputLegacyNames.add("Bismuth Dust to Polonium Dust");
        CoolantRecipe coolant1 = CoolantRecipe.coolantRecipe("water", "Water", "fluids/water", "high_pressure_steam", "High Pressure Steam", "fluids/hps", 64, 4);
        coolant1.inputLegacyNames.add("Water to High Pressure Steam");
        CoolantRecipe coolant2 = CoolantRecipe.coolantRecipe("preheated_water", "Preheated Water", "fluids/preheated_water", "high_pressure_steam", "High Pressure Steam", "fluids/hps", 32, 4);
        coolant2.inputLegacyNames.add("Preheated Water to High Pressure Steam");
        irradiator.allRecipes.add(irrec1);irradiator.recipes.add(irrec1);
        irradiator.allRecipes.add(irrec2);irradiator.recipes.add(irrec2);
        irradiator.allRecipes.add(irrec3);irradiator.recipes.add(irrec3);
        ncpf.configuration.overhaul.fissionSFR.allCoolantRecipes.add(coolant1);ncpf.configuration.overhaul.fissionSFR.coolantRecipes.add(coolant1);
        ncpf.configuration.overhaul.fissionSFR.allCoolantRecipes.add(coolant2);ncpf.configuration.overhaul.fissionSFR.coolantRecipes.add(coolant2);
        addSFRFuels(cell, fission, fuelTimeMult, "thorium", null, "TBU Oxide", "TBU Nitride", "TBU-Zirconium Alloy", null);
        addSFRFuels(cell, fission, fuelTimeMult, "uranium", null, "LEU-233 Oxide", "LEU-233 Nitride", "LEU-233-Zirconium Alloy", null, null, "HEU-233 Oxide", "HEU-233 Nitride", "HEU-233-Zirconium Alloy", null, null, "LEU-235 Oxide", "LEU-235 Nitride", "LEU-235-Zirconium Alloy", null, null, "HEU-235 Oxide", "HEU-235 Nitride", "HEU-235-Zirconium Alloy", null);
        addSFRFuels(cell, fission, fuelTimeMult, "neptunium", null, "LEN-236 Oxide", "LEN-236 Nitride", "LEN-236-Zirconium Alloy", null, null, "HEN-236 Oxide", "HEN-236 Nitride", "HEN-236-Zirconium Alloy", null);
        addSFRFuels(cell, fission, fuelTimeMult, "plutonium", null, "LEP-239 Oxide", "LEP-239 Nitride", "LEP-239-Zirconium Alloy", null, null, "HEP-239 Oxide", "HEP-239 Nitride", "HEP-239-Zirconium Alloy", null, null, "LEP-241 Oxide", "LEP-241 Nitride", "LEP-241-Zirconium Alloy", null, null, "HEP-241 Oxide", "HEP-241 Nitride", "HEP-241-Zirconium Alloy", null);
        addSFRFuels(cell, fission, fuelTimeMult, "mixed", null, "MOX-239", "MNI-239", "MZA-239", null, null, "MOX-241", "MNI-241", "MZA-241", null);
        addSFRFuels(cell, fission, fuelTimeMult, "americium", null, "LEA-242 Oxide", "LEA-242 Nitride", "LEA-242-Zirconium Alloy", null, null, "HEA-242 Oxide", "HEA-242 Nitride", "HEA-242-Zirconium Alloy", null);
        addSFRFuels(cell, fission, fuelTimeMult, "curium", null, "LECm-243 Oxide", "LECm-243 Nitride", "LECm-243-Zirconium Alloy", null, null, "HECm-243 Oxide", "HECm-243 Nitride", "HECm-243-Zirconium Alloy", null, null, "LECm-245 Oxide", "LECm-245 Nitride", "LECm-245-Zirconium Alloy", null, null, "HECm-245 Oxide", "HECm-245 Nitride", "HECm-245-Zirconium Alloy", null, null, "LECm-247 Oxide", "LECm-247 Nitride", "LECm-247-Zirconium Alloy", null, null, "HECm-247 Oxide", "HECm-247 Nitride", "HECm-247-Zirconium Alloy", null);
        addSFRFuels(cell, fission, fuelTimeMult, "berkelium", null, "LEB-248 Oxide", "LEB-248 Nitride", "LEB-248-Zirconium Alloy", null, null, "HEB-248 Oxide", "HEB-248 Nitride", "HEB-248-Zirconium Alloy", null);
        addSFRFuels(cell, fission, fuelTimeMult, "californium", null, "LECf-249 Oxide", "LECf-249 Nitride", "LECf-249-Zirconium Alloy", null, null, "HECf-249 Oxide", "HECf-249 Nitride", "HECf-249-Zirconium Alloy", null, null, "LECf-251 Oxide", "LECf-251 Nitride", "LECf-251-Zirconium Alloy", null, null, "HECf-251 Oxide", "HECf-251 Nitride", "HECf-251-Zirconium Alloy", null);
//</editor-fold>
        //<editor-fold defaultstate="collapsed" desc="Fission MSR">
        ncpf.configuration.overhaul.fissionMSR = new multiblock.configuration.overhaul.fissionmsr.FissionMSRConfiguration();
        multiblock.configuration.overhaul.fissionmsr.Block mcontroller = multiblock.configuration.overhaul.fissionmsr.Block.controller("nuclearcraft:salt_fission_controller", "Molten Salt Fission Controller", "overhaul/msr/controller");
        multiblock.configuration.overhaul.fissionmsr.Block mcasing = multiblock.configuration.overhaul.fissionmsr.Block.casing("nuclearcraft:fission_casing", "Reactor Casing", "overhaul/casing", true);
        multiblock.configuration.overhaul.fissionmsr.Block mtransparentCasing = multiblock.configuration.overhaul.fissionmsr.Block.casing("nuclearcraft:fission_glass", "Reactor Glass", "overhaul/glass", false);
        ncpf.configuration.overhaul.fissionMSR.blocks.add(mcontroller);ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mcontroller);
        ncpf.configuration.overhaul.fissionMSR.blocks.add(mcasing);ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mcasing);
        ncpf.configuration.overhaul.fissionMSR.blocks.add(mtransparentCasing);ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mtransparentCasing);
        ncpf.configuration.overhaul.fissionMSR.coolingEfficiencyLeniency = fission.getInt("fission_cooling_efficiency_leniency");
        ncpf.configuration.overhaul.fissionMSR.minSize = fission.getInt("fission_min_size");
        ncpf.configuration.overhaul.fissionMSR.maxSize = fission.getInt("fission_max_size");
        ncpf.configuration.overhaul.fissionMSR.neutronReach = fission.getInt("fission_neutron_reach");
        ncpf.configuration.overhaul.fissionMSR.sparsityPenaltyMult = (float) sparsity.getDouble(0);
        ncpf.configuration.overhaul.fissionMSR.sparsityPenaltyThreshold = (float) sparsity.getDouble(1);
        multiblock.configuration.overhaul.fissionmsr.Block mrabe = multiblock.configuration.overhaul.fissionmsr.Block.source("nuclearcraft:fission_source:0", "Ra-Be Neutron Source", "overhaul/ra-be", (float) sourceEfficiency.getDouble(0));
        multiblock.configuration.overhaul.fissionmsr.Block mpobe = multiblock.configuration.overhaul.fissionmsr.Block.source("nuclearcraft:fission_source:1", "Po-Be Neutron Source", "overhaul/po-be", (float) sourceEfficiency.getDouble(1));
        multiblock.configuration.overhaul.fissionmsr.Block mcf252 = multiblock.configuration.overhaul.fissionmsr.Block.source("nuclearcraft:fission_source:2", "Cf-252 Neutron Source", "overhaul/cf-252", (float) sourceEfficiency.getDouble(2));
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mrabe);ncpf.configuration.overhaul.fissionMSR.blocks.add(mrabe);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mpobe);ncpf.configuration.overhaul.fissionMSR.blocks.add(mpobe);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mcf252);ncpf.configuration.overhaul.fissionMSR.blocks.add(mcf252);
        coolingRates = fission.getConfigList("fission_heater_cooling_rate");
        rules = fission.getConfigList("fission_heater_rule");
        multiblock.configuration.overhaul.fissionmsr.Block mstandard = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:0", "Standard Coolant Heater", "overhaul/msr/standard");
        multiblock.configuration.overhaul.fissionmsr.Block pstandard = multiblock.configuration.overhaul.fissionmsr.Block.port(mstandard, "nuclearcraft:fission_heater_port:0", "Standard Coolant Heater Port (Input)", "overhaul/msr/port/standard", "Standard Coolant Heater Port (Output)", "overhaul/msr/port/output/standard");
        mstandard.port = pstandard;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rstandard = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("nak", "Eutectic NAK Alloy", "overhaul/msr/coolant/nak", "nak_hot", "Hot Eutectic NaK Alloy", "overhaul/msr/coolant/hot/nak", 1, 1, coolingRates.getInt(0));
        mstandard.recipes.add(rstandard);mstandard.allRecipes.add(rstandard);
        multiblock.configuration.overhaul.fissionmsr.Block miron = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:1", "Iron Coolant Heater", "overhaul/msr/iron");
        multiblock.configuration.overhaul.fissionmsr.Block piron = multiblock.configuration.overhaul.fissionmsr.Block.port(miron, "nuclearcraft:fission_heater_port:1", "Iron Coolant Heater Port (Input)", "overhaul/msr/port/iron", "Iron Coolant Heater Port (Output)", "overhaul/msr/port/output/iron");
        miron.port = piron;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe riron = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("iron_nak", "Eutectic NaK-Iron Mixture", "overhaul/msr/coolant/iron", "iron_nak_hot", "Hot Eutectic NaK-Iron Mixture", "overhaul/msr/coolant/hot/iron", 1, 1, coolingRates.getInt(1));
        miron.recipes.add(riron);miron.allRecipes.add(riron);
        multiblock.configuration.overhaul.fissionmsr.Block mredstone = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:2", "Redstone Coolant Heater", "overhaul/msr/redstone");
        multiblock.configuration.overhaul.fissionmsr.Block predstone = multiblock.configuration.overhaul.fissionmsr.Block.port(mredstone, "nuclearcraft:fission_heater_port:2", "Redstone Coolant Heater Port (Input)", "overhaul/msr/port/redstone", "Redstone Coolant Heater Port (Output)", "overhaul/msr/port/output/redstone");
        mredstone.port = predstone;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rredstone = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("redstone_nak", "Eutectic NaK-Redstone Mixture", "overhaul/msr/coolant/redstone", "redstone_nak_hot", "Hot Eutectic NaK-Redstone Mixture", "overhaul/msr/coolant/hot/redstone", 1, 1, coolingRates.getInt(2));
        mredstone.recipes.add(rredstone);mredstone.allRecipes.add(rredstone);
        multiblock.configuration.overhaul.fissionmsr.Block mquartz = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:3", "Quartz Coolant Heater", "overhaul/msr/quartz");
        multiblock.configuration.overhaul.fissionmsr.Block pquartz = multiblock.configuration.overhaul.fissionmsr.Block.port(mquartz, "nuclearcraft:fission_heater_port:3", "Quartz Coolant Heater Port (Input)", "overhaul/msr/port/quartz", "Quartz Coolant Heater Port (Output)", "overhaul/msr/port/output/quartz");
        mquartz.port = pquartz;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rquartz = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("quartz_nak", "Eutectic NaK-Quartz Mixture", "overhaul/msr/coolant/quartz", "quartz_nak_hot", "Hot Eutectic NaK-Quartz Mixture", "overhaul/msr/coolant/hot/quartz", 1, 1, coolingRates.getInt(3));
        mquartz.recipes.add(rquartz);mquartz.allRecipes.add(rquartz);
        multiblock.configuration.overhaul.fissionmsr.Block mobsidian = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:4", "Obsidian Coolant Heater", "overhaul/msr/obsidian");
        multiblock.configuration.overhaul.fissionmsr.Block pobsidian = multiblock.configuration.overhaul.fissionmsr.Block.port(mobsidian, "nuclearcraft:fission_heater_port:4", "Obsidian Coolant Heater Port (Input)", "overhaul/msr/port/obsidian", "Obsidian Coolant Heater Port (Output)", "overhaul/msr/port/output/obsidian");
        mobsidian.port = pobsidian;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe robsidian = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("obsidian_nak", "Eutectic NaK-Obsidian Mixture", "overhaul/msr/coolant/obsidian", "obsidian_nak_hot", "Hot Eutectic NaK-Obsidian Mixture", "overhaul/msr/coolant/hot/obsidian", 1, 1, coolingRates.getInt(4));
        mobsidian.recipes.add(robsidian);mobsidian.allRecipes.add(robsidian);
        multiblock.configuration.overhaul.fissionmsr.Block mnetherBrick = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:5", "Nether Brick Coolant Heater", "overhaul/msr/nether brick");
        multiblock.configuration.overhaul.fissionmsr.Block pnetherBrick = multiblock.configuration.overhaul.fissionmsr.Block.port(mnetherBrick, "nuclearcraft:fission_heater_port:5", "Nether Brick Coolant Heater Port (Input)", "overhaul/msr/port/nether_brick", "Nether Brick Coolant Heater Port (Output)", "overhaul/msr/port/output/nether_brick");
        mnetherBrick.port = pnetherBrick;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rnetherBrick = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("nether_brick_nak", "Eutectic NaK-Nether Brick Mixture", "overhaul/msr/coolant/nether_brick", "nether_brick_nak_hot", "Hot Eutectic NaK-Nether Brick Mixture", "overhaul/msr/coolant/hot/nether_brick", 1, 1, coolingRates.getInt(5));
        mnetherBrick.recipes.add(rnetherBrick);mnetherBrick.allRecipes.add(rnetherBrick);
        multiblock.configuration.overhaul.fissionmsr.Block mglowstone = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:6", "Glowstone Coolant Heater", "overhaul/msr/glowstone");
        multiblock.configuration.overhaul.fissionmsr.Block pglowstone = multiblock.configuration.overhaul.fissionmsr.Block.port(mglowstone, "nuclearcraft:fission_heater_port:6", "Glowstone Coolant Heater Port (Input)", "overhaul/msr/port/glowstone", "Glowstone Coolant Heater Port (Output)", "overhaul/msr/port/output/glowstone");
        mglowstone.port = pglowstone;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rglowstone = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("glowstone_nak", "Eutectic NaK-Glowstone Mixture", "overhaul/msr/coolant/glowstone", "glowstone_nak_hot", "Hot Eutectic NaK-Glowstone Mixture", "overhaul/msr/coolant/hot/glowstone", 1, 1, coolingRates.getInt(6));
        mglowstone.recipes.add(rglowstone);mglowstone.allRecipes.add(rglowstone);
        multiblock.configuration.overhaul.fissionmsr.Block mlapis = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:7", "Lapis Coolant Heater", "overhaul/msr/lapis");
        multiblock.configuration.overhaul.fissionmsr.Block plapis = multiblock.configuration.overhaul.fissionmsr.Block.port(mlapis, "nuclearcraft:fission_heater_port:7", "Lapis Coolant Heater Port (Input)", "overhaul/msr/port/lapis", "Lapis Coolant Heater Port (Output)", "overhaul/msr/port/output/lapis");
        mlapis.port = plapis;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rlapis = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("lapis_nak", "Eutectic NaK-Lapis Mixture", "overhaul/msr/coolant/lapis", "lapis_nak_hot", "Hot Eutectic NaK-Lapis Mixture", "overhaul/msr/coolant/hot/lapis", 1, 1, coolingRates.getInt(7));
        mlapis.recipes.add(rlapis);mlapis.allRecipes.add(rlapis);
        multiblock.configuration.overhaul.fissionmsr.Block mgold = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:8", "Gold Coolant Heater", "overhaul/msr/gold");
        multiblock.configuration.overhaul.fissionmsr.Block pgold = multiblock.configuration.overhaul.fissionmsr.Block.port(mgold, "nuclearcraft:fission_heater_port:8", "Gold Coolant Heater Port (Input)", "overhaul/msr/port/gold", "Gold Coolant Heater Port (Output)", "overhaul/msr/port/output/gold");
        mgold.port = pgold;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rgold = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("gold_nak", "Eutectic NaK-Gold Mixture", "overhaul/msr/coolant/gold", "gold_nak_hot", "Hot Eutectic NaK-Gold Mixture", "overhaul/msr/coolant/hot/gold", 1, 1, coolingRates.getInt(8));
        mgold.recipes.add(rgold);mgold.allRecipes.add(rgold);
        multiblock.configuration.overhaul.fissionmsr.Block mprismarine = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:9", "Prismarine Coolant Heater", "overhaul/msr/prismarine");
        multiblock.configuration.overhaul.fissionmsr.Block pprismarine = multiblock.configuration.overhaul.fissionmsr.Block.port(mprismarine, "nuclearcraft:fission_heater_port:9", "Prismarine Coolant Heater Port (Input)", "overhaul/msr/port/prismarine", "Prismarine Coolant Heater Port (Output)", "overhaul/msr/port/output/prismarine");
        mprismarine.port = pprismarine;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rprismarine = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("prismarine_nak", "Eutectic NaK-Prismarine Mixture", "overhaul/msr/coolant/prismarine", "prismarine_nak_hot", "Hot Eutectic NaK-Prismarine Mixture", "overhaul/msr/coolant/hot/prismarine", 1, 1, coolingRates.getInt(9));
        mprismarine.recipes.add(rprismarine);mprismarine.allRecipes.add(rprismarine);
        multiblock.configuration.overhaul.fissionmsr.Block mslime = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:10", "Slime Coolant Heater", "overhaul/msr/slime");
        multiblock.configuration.overhaul.fissionmsr.Block pslime = multiblock.configuration.overhaul.fissionmsr.Block.port(mslime, "nuclearcraft:fission_heater_port:10", "Slime Coolant Heater Port (Input)", "overhaul/msr/port/slime", "Slime Coolant Heater Port (Output)", "overhaul/msr/port/output/slime");
        mslime.port = pslime;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rslime = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("slime_nak", "Eutectic NaK-Slime Mixture", "overhaul/msr/coolant/slime", "slime_nak_hot", "Hot Eutectic NaK-Slime Mixture", "overhaul/msr/coolant/hot/slime", 1, 1, coolingRates.getInt(10));
        mslime.recipes.add(rslime);mslime.allRecipes.add(rslime);
        multiblock.configuration.overhaul.fissionmsr.Block mendStone = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:11", "End Stone Coolant Heater", "overhaul/msr/end stone");
        multiblock.configuration.overhaul.fissionmsr.Block pendStone = multiblock.configuration.overhaul.fissionmsr.Block.port(mendStone, "nuclearcraft:fission_heater_port:11", "End Stone Coolant Heater Port (Input)", "overhaul/msr/port/end_stone", "End Stone Coolant Heater Port (Output)", "overhaul/msr/port/output/end_stone");
        mendStone.port = pendStone;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rendStone = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("end_stone_nak", "Eutectic NaK-End Stone Mixture", "overhaul/msr/coolant/end_stone", "end_stone_nak_hot", "Hot Eutectic NaK-End Stone Mixture", "overhaul/msr/coolant/hot/end_stone", 1, 1, coolingRates.getInt(11));
        mendStone.recipes.add(rendStone);mendStone.allRecipes.add(rendStone);
        multiblock.configuration.overhaul.fissionmsr.Block mpurpur = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:12", "Purpur Coolant Heater", "overhaul/msr/purpur");
        multiblock.configuration.overhaul.fissionmsr.Block ppurpur = multiblock.configuration.overhaul.fissionmsr.Block.port(mpurpur, "nuclearcraft:fission_heater_port:12", "Purpur Coolant Heater Port (Input)", "overhaul/msr/port/purpur", "Purpur Coolant Heater Port (Output)", "overhaul/msr/port/output/purpur");
        mpurpur.port = ppurpur;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rpurpur = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("purpur_nak", "Eutectic NaK-Purpur Mixture", "overhaul/msr/coolant/purpur", "purpur_nak_hot", "Hot Eutectic NaK-Purpur Mixture", "overhaul/msr/coolant/hot/purpur", 1, 1, coolingRates.getInt(12));
        mpurpur.recipes.add(rpurpur);mpurpur.allRecipes.add(rpurpur);
        multiblock.configuration.overhaul.fissionmsr.Block mdiamond = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:13", "Diamond Coolant Heater", "overhaul/msr/diamond");
        multiblock.configuration.overhaul.fissionmsr.Block pdiamond = multiblock.configuration.overhaul.fissionmsr.Block.port(mdiamond, "nuclearcraft:fission_heater_port:13", "Diamond Coolant Heater Port (Input)", "overhaul/msr/port/diamond", "Diamond Coolant Heater Port (Output)", "overhaul/msr/port/output/diamond");
        mdiamond.port = pdiamond;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rdiamond = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("diamond_nak", "Eutectic NaK-Diamond Mixture", "overhaul/msr/coolant/diamond", "diamond_nak_hot", "Hot Eutectic NaK-Diamond Mixture", "overhaul/msr/coolant/hot/diamond", 1, 1, coolingRates.getInt(13));
        mdiamond.recipes.add(rdiamond);mdiamond.allRecipes.add(rdiamond);
        multiblock.configuration.overhaul.fissionmsr.Block memerald = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:14", "Emerald Coolant Heater", "overhaul/msr/emerald");
        multiblock.configuration.overhaul.fissionmsr.Block pemerald = multiblock.configuration.overhaul.fissionmsr.Block.port(memerald, "nuclearcraft:fission_heater_port:14", "Emerald Coolant Heater Port (Input)", "overhaul/msr/port/emerald", "Emerald Coolant Heater Port (Output)", "overhaul/msr/port/output/emerald");
        memerald.port = pemerald;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe remerald = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("emerald_nak", "Eutectic NaK-Emerald Mixture", "overhaul/msr/coolant/emerald", "emerald_nak_hot", "Hot Eutectic NaK-Emerald Mixture", "overhaul/msr/coolant/hot/emerald", 1, 1, coolingRates.getInt(14));
        memerald.recipes.add(remerald);memerald.allRecipes.add(remerald);
        multiblock.configuration.overhaul.fissionmsr.Block mcopper = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater:15", "Copper Coolant Heater", "overhaul/msr/copper");
        multiblock.configuration.overhaul.fissionmsr.Block pcopper = multiblock.configuration.overhaul.fissionmsr.Block.port(mcopper, "nuclearcraft:fission_heater_port:15", "Copper Coolant Heater Port (Input)", "overhaul/msr/port/copper", "Copper Coolant Heater Port (Output)", "overhaul/msr/port/output/copper");
        mcopper.port = pcopper;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rcopper = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("copper_nak", "Eutectic NaK-Copper Mixture", "overhaul/msr/coolant/copper", "copper_nak_hot", "Hot Eutectic NaK-Copper Mixture", "overhaul/msr/coolant/hot/copper", 1, 1, coolingRates.getInt(15));
        mcopper.recipes.add(rcopper);mcopper.allRecipes.add(rcopper);
        multiblock.configuration.overhaul.fissionmsr.Block mtin = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:0", "Tin Coolant Heater", "overhaul/msr/tin");
        multiblock.configuration.overhaul.fissionmsr.Block ptin = multiblock.configuration.overhaul.fissionmsr.Block.port(mtin, "nuclearcraft:fission_heater_port2:0", "Tin Coolant Heater Port (Input)", "overhaul/msr/port/tin", "Tin Coolant Heater Port (Output)", "overhaul/msr/port/output/tin");
        mtin.port = ptin;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rtin = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("tin_nak", "Eutectic NaK-Tin Mixture", "overhaul/msr/coolant/tin", "tin_nak_hot", "Hot Eutectic NaK-Tin Mixture", "overhaul/msr/coolant/hot/tin", 1, 1, coolingRates.getInt(16));
        mtin.recipes.add(rtin);mtin.allRecipes.add(rtin);
        multiblock.configuration.overhaul.fissionmsr.Block mlead = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:1", "Lead Coolant Heater", "overhaul/msr/lead");
        multiblock.configuration.overhaul.fissionmsr.Block plead = multiblock.configuration.overhaul.fissionmsr.Block.port(mlead, "nuclearcraft:fission_heater_port2:1", "Lead Coolant Heater Port (Input)", "overhaul/msr/port/lead", "Lead Coolant Heater Port (Output)", "overhaul/msr/port/output/lead");
        mlead.port = plead;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rlead = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("lead_nak", "Eutectic NaK-Lead Mixture", "overhaul/msr/coolant/lead", "lead_nak_hot", "Hot Eutectic NaK-Lead Mixture", "overhaul/msr/coolant/hot/lead", 1, 1, coolingRates.getInt(17));
        mlead.recipes.add(rlead);mlead.allRecipes.add(rlead);
        multiblock.configuration.overhaul.fissionmsr.Block mboron = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:2", "Boron Coolant Heater", "overhaul/msr/boron");
        multiblock.configuration.overhaul.fissionmsr.Block pboron = multiblock.configuration.overhaul.fissionmsr.Block.port(mboron, "nuclearcraft:fission_heater_port2:2", "Boron Coolant Heater Port (Input)", "overhaul/msr/port/boron", "Boron Coolant Heater Port (Output)", "overhaul/msr/port/output/boron");
        mboron.port = pboron;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rboron = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("boron_nak", "Eutectic NaK-Boron Mixture", "overhaul/msr/coolant/boron", "boron_nak_hot", "Hot Eutectic NaK-Boron Mixture", "overhaul/msr/coolant/hot/boron", 1, 1, coolingRates.getInt(18));
        mboron.recipes.add(rboron);mboron.allRecipes.add(rboron);
        multiblock.configuration.overhaul.fissionmsr.Block mlithium = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:3", "Lithium Coolant Heater", "overhaul/msr/lithium");
        multiblock.configuration.overhaul.fissionmsr.Block plithium = multiblock.configuration.overhaul.fissionmsr.Block.port(mlithium, "nuclearcraft:fission_heater_port2:3", "Lithium Coolant Heater Port (Input)", "overhaul/msr/port/lithium", "Lithium Coolant Heater Port (Output)", "overhaul/msr/port/output/lithium");
        mlithium.port = plithium;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rlithium = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("lithium_nak", "Eutectic NaK-Lithium Mixture", "overhaul/msr/coolant/lithium", "lithium_nak_hot", "Hot Eutectic NaK-Lithium Mixture", "overhaul/msr/coolant/hot/lithium", 1, 1, coolingRates.getInt(19));
        mlithium.recipes.add(rlithium);mlithium.allRecipes.add(rlithium);
        multiblock.configuration.overhaul.fissionmsr.Block mmagnesium = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:4", "Magnesium Coolant Heater", "overhaul/msr/magnesium");
        multiblock.configuration.overhaul.fissionmsr.Block pmagnesium = multiblock.configuration.overhaul.fissionmsr.Block.port(mmagnesium, "nuclearcraft:fission_heater_port2:4", "Magnesium Coolant Heater Port (Input)", "overhaul/msr/port/magnesium", "Magnesium Coolant Heater Port (Output)", "overhaul/msr/port/output/magnesium");
        mmagnesium.port = pmagnesium;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rmagnesium = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("magnesium_nak", "Eutectic NaK-Magnesium Mixture", "overhaul/msr/coolant/magnesium", "magnesium_nak_hot", "Hot Eutectic NaK-Magnesium Mixture", "overhaul/msr/coolant/hot/magnesium", 1, 1, coolingRates.getInt(20));
        mmagnesium.recipes.add(rmagnesium);mmagnesium.allRecipes.add(rmagnesium);
        multiblock.configuration.overhaul.fissionmsr.Block mmanganese = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:5", "Manganese Coolant Heater", "overhaul/msr/manganese");
        multiblock.configuration.overhaul.fissionmsr.Block pmanganese = multiblock.configuration.overhaul.fissionmsr.Block.port(mmanganese, "nuclearcraft:fission_heater_port2:5", "Manganese Coolant Heater Port (Input)", "overhaul/msr/port/manganese", "Manganese Coolant Heater Port (Output)", "overhaul/msr/port/output/manganese");
        mmanganese.port = pmanganese;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rmanganese = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("manganese_nak", "Eutectic NaK-Manganese Mixture", "overhaul/msr/coolant/manganese", "manganese_nak_hot", "Hot Eutectic NaK-Manganese Mixture", "overhaul/msr/coolant/hot/manganese", 1, 1, coolingRates.getInt(21));
        mmanganese.recipes.add(rmanganese);mmanganese.allRecipes.add(rmanganese);
        multiblock.configuration.overhaul.fissionmsr.Block maluminum = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:6", "Aluminum Coolant Heater", "overhaul/msr/aluminum");
        multiblock.configuration.overhaul.fissionmsr.Block paluminum = multiblock.configuration.overhaul.fissionmsr.Block.port(maluminum, "nuclearcraft:fission_heater_port2:6", "Aluminum Coolant Heater Port (Input)", "overhaul/msr/port/aluminum", "Aluminum Coolant Heater Port (Output)", "overhaul/msr/port/output/aluminum");
        maluminum.port = paluminum;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe raluminum = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("aluminum_nak", "Eutectic NaK-Aluminum Mixture", "overhaul/msr/coolant/aluminum", "aluminum_nak_hot", "Hot Eutectic NaK-Aluminum Mixture", "overhaul/msr/coolant/hot/aluminum", 1, 1, coolingRates.getInt(22));
        maluminum.recipes.add(raluminum);maluminum.allRecipes.add(raluminum);
        multiblock.configuration.overhaul.fissionmsr.Block msilver = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:7", "Silver Coolant Heater", "overhaul/msr/silver");
        multiblock.configuration.overhaul.fissionmsr.Block psilver = multiblock.configuration.overhaul.fissionmsr.Block.port(msilver, "nuclearcraft:fission_heater_port2:7", "Silver Coolant Heater Port (Input)", "overhaul/msr/port/silver", "Silver Coolant Heater Port (Output)", "overhaul/msr/port/output/silver");
        msilver.port = psilver;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rsilver = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("silver_nak", "Eutectic NaK-Silver Mixture", "overhaul/msr/coolant/silver", "silver_nak_hot", "Hot Eutectic NaK-Silver Mixture", "overhaul/msr/coolant/hot/silver", 1, 1, coolingRates.getInt(23));
        msilver.recipes.add(rsilver);msilver.allRecipes.add(rsilver);
        multiblock.configuration.overhaul.fissionmsr.Block mfluorite = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:8", "Fluorite Coolant Heater", "overhaul/msr/fluorite");
        multiblock.configuration.overhaul.fissionmsr.Block pfluorite = multiblock.configuration.overhaul.fissionmsr.Block.port(mfluorite, "nuclearcraft:fission_heater_port2:8", "Fluorite Coolant Heater Port (Input)", "overhaul/msr/port/fluorite", "Fluorite Coolant Heater Port (Output)", "overhaul/msr/port/output/fluorite");
        mfluorite.port = pfluorite;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rfluorite = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("fluorite_nak", "Eutectic NaK-Fluorite Mixture", "overhaul/msr/coolant/fluorite", "fluorite_nak_hot", "Hot Eutectic NaK-Fluorite Mixture", "overhaul/msr/coolant/hot/fluorite", 1, 1, coolingRates.getInt(24));
        mfluorite.recipes.add(rfluorite);mfluorite.allRecipes.add(rfluorite);
        multiblock.configuration.overhaul.fissionmsr.Block mvilliaumite = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:9", "Villiaumite Coolant Heater", "overhaul/msr/villiaumite");
        multiblock.configuration.overhaul.fissionmsr.Block pvilliaumite = multiblock.configuration.overhaul.fissionmsr.Block.port(mvilliaumite, "nuclearcraft:fission_heater_port2:9", "Villiaumite Coolant Heater Port (Input)", "overhaul/msr/port/villiaumite", "Villiaumite Coolant Heater Port (Output)", "overhaul/msr/port/output/villiaumite");
        mvilliaumite.port = pvilliaumite;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rvilliaumite = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("villiaumite_nak", "Eutectic NaK-Villiaumite Mixture", "overhaul/msr/coolant/villiaumite", "villiaumite_nak_hot", "Hot Eutectic NaK-Villiaumite Mixture", "overhaul/msr/coolant/hot/villiaumite", 1, 1, coolingRates.getInt(25));
        mvilliaumite.recipes.add(rvilliaumite);mvilliaumite.allRecipes.add(rvilliaumite);
        multiblock.configuration.overhaul.fissionmsr.Block mcarobbiite = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:10", "Carobbiite Coolant Heater", "overhaul/msr/carobbiite");
        multiblock.configuration.overhaul.fissionmsr.Block pcarobbiite = multiblock.configuration.overhaul.fissionmsr.Block.port(mcarobbiite, "nuclearcraft:fission_heater_port2:10", "Carobbiite Coolant Heater Port (Input)", "overhaul/msr/port/carobbiite", "Carobbiite Coolant Heater Port (Output)", "overhaul/msr/port/output/carobbiite");
        mcarobbiite.port = pcarobbiite;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rcarobbiite = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("carobbiite_nak", "Eutectic NaK-Carobbiite Mixture", "overhaul/msr/coolant/carobbiite", "carobbiite_nak_hot", "Hot Eutectic NaK-Carobbiite Mixture", "overhaul/msr/coolant/hot/carobbiite", 1, 1, coolingRates.getInt(26));
        mcarobbiite.recipes.add(rcarobbiite);mcarobbiite.allRecipes.add(rcarobbiite);
        multiblock.configuration.overhaul.fissionmsr.Block marsenic = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:11", "Arsenic Coolant Heater", "overhaul/msr/arsenic");
        multiblock.configuration.overhaul.fissionmsr.Block parsenic = multiblock.configuration.overhaul.fissionmsr.Block.port(marsenic, "nuclearcraft:fission_heater_port2:11", "Arsenic Coolant Heater Port (Input)", "overhaul/msr/port/arsenic", "Arsenic Coolant Heater Port (Output)", "overhaul/msr/port/output/arsenic");
        marsenic.port = parsenic;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rarsenic = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("arsenic_nak", "Eutectic NaK-Arsenic Mixture", "overhaul/msr/coolant/arsenic", "arsenic_nak_hot", "Hot Eutectic NaK-Arsenic Mixture", "overhaul/msr/coolant/hot/arsenic", 1, 1, coolingRates.getInt(27));
        marsenic.recipes.add(rarsenic);marsenic.allRecipes.add(rarsenic);
        multiblock.configuration.overhaul.fissionmsr.Block mnitrogen = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:12", "Liquid Nitrogen Coolant Heater", "overhaul/msr/nitrogen");
        multiblock.configuration.overhaul.fissionmsr.Block pnitrogen = multiblock.configuration.overhaul.fissionmsr.Block.port(mnitrogen, "nuclearcraft:fission_heater_port2:12", "Liquid Nitrogen Coolant Heater Port (Input)", "overhaul/msr/port/nitrogen", "Liquid Nitrogen Coolant Heater Port (Output)", "overhaul/msr/port/output/nitrogen");
        mnitrogen.port = pnitrogen;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rnitrogen = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("liquid_nitrogen_nak", "Eutectic NaK-Nitrogen Mixture", "overhaul/msr/coolant/nitrogen", "liquid_nitrogen_nak_hot", "Hot Eutectic NaK-Nitrogen Mixture", "overhaul/msr/coolant/hot/nitrogen", 1, 1, coolingRates.getInt(28));
        mnitrogen.recipes.add(rnitrogen);mnitrogen.allRecipes.add(rnitrogen);
        multiblock.configuration.overhaul.fissionmsr.Block mhelium = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:13", "Liquid Helium Coolant Heater", "overhaul/msr/helium");
        multiblock.configuration.overhaul.fissionmsr.Block phelium = multiblock.configuration.overhaul.fissionmsr.Block.port(mhelium, "nuclearcraft:fission_heater_port2:13", "Liquid Helium Coolant Heater Port (Input)", "overhaul/msr/port/helium", "Liquid Helium Coolant Heater Port (Output)", "overhaul/msr/port/output/helium");
        mhelium.port = phelium;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rhelium = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("liquid_helium_nak", "Eutectic NaK-Helium Mixture", "overhaul/msr/coolant/helium", "liquid_helium_nak_hot", "Hot Eutectic NaK-Helium Mixture", "overhaul/msr/coolant/hot/helium", 1, 1, coolingRates.getInt(29));
        mhelium.recipes.add(rhelium);mhelium.allRecipes.add(rhelium);
        multiblock.configuration.overhaul.fissionmsr.Block menderium = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:14", "Enderium Coolant Heater", "overhaul/msr/enderium");
        multiblock.configuration.overhaul.fissionmsr.Block penderium = multiblock.configuration.overhaul.fissionmsr.Block.port(menderium, "nuclearcraft:fission_heater_port2:14", "Enderium Coolant Heater Port (Input)", "overhaul/msr/port/enderium", "Enderium Coolant Heater Port (Output)", "overhaul/msr/port/output/enderium");
        menderium.port = penderium;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe renderium = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("enderium_nak", "Eutectic NaK-Enderium Mixture", "overhaul/msr/coolant/enderium", "enderium_nak_hot", "Hot Eutectic NaK-Enderium Mixture", "overhaul/msr/coolant/hot/enderium", 1, 1, coolingRates.getInt(30));
        menderium.recipes.add(renderium);menderium.allRecipes.add(renderium);
        multiblock.configuration.overhaul.fissionmsr.Block mcryotheum = multiblock.configuration.overhaul.fissionmsr.Block.heater("nuclearcraft:salt_fission_heater2:15", "Cryotheum Coolant Heater", "overhaul/msr/cryotheum");
        multiblock.configuration.overhaul.fissionmsr.Block pcryotheum = multiblock.configuration.overhaul.fissionmsr.Block.port(mcryotheum, "nuclearcraft:fission_heater_port2:15", "Cryotheum Coolant Heater Port (Input)", "overhaul/msr/port/cryotheum", "Cryotheum Coolant Heater Port (Output)", "overhaul/msr/port/output/cryotheum");
        mcryotheum.port = pcryotheum;
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe rcryotheum = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.heater("cryotheum_nak", "Eutectic NaK-Cryotheum Mixture", "overhaul/msr/coolant/cryotheum", "cryotheum_nak_hot", "Hot Eutectic NaK-Cryotheum Mixture", "overhaul/msr/coolant/hot/cryotheum", 1, 1, coolingRates.getInt(31));
        mcryotheum.recipes.add(rcryotheum);mcryotheum.allRecipes.add(rcryotheum);
        multiblock.configuration.overhaul.fissionmsr.Block vessel = multiblock.configuration.overhaul.fissionmsr.Block.vessel("nuclearcraft:salt_fission_vessel", "Fuel Vessel", "overhaul/msr/vessel");
        multiblock.configuration.overhaul.fissionmsr.Block vesselPort = multiblock.configuration.overhaul.fissionmsr.Block.port(vessel, "nuclearcraft:fission_vessel_port", "Fuel Vessel Port (Input)", "overhaul/msr/vessel_port_input", "Fuel Vessel Port (Output)", "overhaul/msr/vessel_port_output");
        vessel.port = vesselPort;
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(vessel);ncpf.configuration.overhaul.fissionMSR.blocks.add(vessel);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(vessel.port);ncpf.configuration.overhaul.fissionMSR.blocks.add(vessel.port);
        multiblock.configuration.overhaul.fissionmsr.Block mirradiator = multiblock.configuration.overhaul.fissionmsr.Block.irradiator("nuclearcraft:fission_irradiator", "Neutron Irradiator", "overhaul/irradiator");
        multiblock.configuration.overhaul.fissionmsr.Block mirradiatorPort = multiblock.configuration.overhaul.fissionmsr.Block.port(mirradiator, "nuclearcraft:fission_irradiator_port", "Neutron Irradiator Port (Input)", "overhaul/irradiator_port_input", "Neutron Irradiator Port (Output)", "overhaul/irradiator_port_output");
        mirradiator.port = mirradiatorPort;
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mirradiator);ncpf.configuration.overhaul.fissionMSR.blocks.add(mirradiator);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mirradiator.port);ncpf.configuration.overhaul.fissionMSR.blocks.add(mirradiator.port);
        multiblock.configuration.overhaul.fissionmsr.Block mconductor = multiblock.configuration.overhaul.fissionmsr.Block.conductor("nuclearcraft:fission_conductor", "Conductor", "overhaul/conductor");
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mconductor);ncpf.configuration.overhaul.fissionMSR.blocks.add(mconductor);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mstandard);ncpf.configuration.overhaul.fissionMSR.blocks.add(mstandard);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pstandard);ncpf.configuration.overhaul.fissionMSR.blocks.add(pstandard);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(miron);ncpf.configuration.overhaul.fissionMSR.blocks.add(miron);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(piron);ncpf.configuration.overhaul.fissionMSR.blocks.add(piron);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mredstone);ncpf.configuration.overhaul.fissionMSR.blocks.add(mredstone);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(predstone);ncpf.configuration.overhaul.fissionMSR.blocks.add(predstone);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mquartz);ncpf.configuration.overhaul.fissionMSR.blocks.add(mquartz);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pquartz);ncpf.configuration.overhaul.fissionMSR.blocks.add(pquartz);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mobsidian);ncpf.configuration.overhaul.fissionMSR.blocks.add(mobsidian);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pobsidian);ncpf.configuration.overhaul.fissionMSR.blocks.add(pobsidian);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mnetherBrick);ncpf.configuration.overhaul.fissionMSR.blocks.add(mnetherBrick);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pnetherBrick);ncpf.configuration.overhaul.fissionMSR.blocks.add(pnetherBrick);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mglowstone);ncpf.configuration.overhaul.fissionMSR.blocks.add(mglowstone);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pglowstone);ncpf.configuration.overhaul.fissionMSR.blocks.add(pglowstone);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mlapis);ncpf.configuration.overhaul.fissionMSR.blocks.add(mlapis);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(plapis);ncpf.configuration.overhaul.fissionMSR.blocks.add(plapis);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mgold);ncpf.configuration.overhaul.fissionMSR.blocks.add(mgold);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pgold);ncpf.configuration.overhaul.fissionMSR.blocks.add(pgold);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mprismarine);ncpf.configuration.overhaul.fissionMSR.blocks.add(mprismarine);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pprismarine);ncpf.configuration.overhaul.fissionMSR.blocks.add(pprismarine);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mslime);ncpf.configuration.overhaul.fissionMSR.blocks.add(mslime);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pslime);ncpf.configuration.overhaul.fissionMSR.blocks.add(pslime);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mendStone);ncpf.configuration.overhaul.fissionMSR.blocks.add(mendStone);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pendStone);ncpf.configuration.overhaul.fissionMSR.blocks.add(pendStone);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mpurpur);ncpf.configuration.overhaul.fissionMSR.blocks.add(mpurpur);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(ppurpur);ncpf.configuration.overhaul.fissionMSR.blocks.add(ppurpur);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mdiamond);ncpf.configuration.overhaul.fissionMSR.blocks.add(mdiamond);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pdiamond);ncpf.configuration.overhaul.fissionMSR.blocks.add(pdiamond);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(memerald);ncpf.configuration.overhaul.fissionMSR.blocks.add(memerald);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pemerald);ncpf.configuration.overhaul.fissionMSR.blocks.add(pemerald);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mcopper);ncpf.configuration.overhaul.fissionMSR.blocks.add(mcopper);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pcopper);ncpf.configuration.overhaul.fissionMSR.blocks.add(pcopper);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mtin);ncpf.configuration.overhaul.fissionMSR.blocks.add(mtin);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(ptin);ncpf.configuration.overhaul.fissionMSR.blocks.add(ptin);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mlead);ncpf.configuration.overhaul.fissionMSR.blocks.add(mlead);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(plead);ncpf.configuration.overhaul.fissionMSR.blocks.add(plead);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mboron);ncpf.configuration.overhaul.fissionMSR.blocks.add(mboron);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pboron);ncpf.configuration.overhaul.fissionMSR.blocks.add(pboron);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mlithium);ncpf.configuration.overhaul.fissionMSR.blocks.add(mlithium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(plithium);ncpf.configuration.overhaul.fissionMSR.blocks.add(plithium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mmagnesium);ncpf.configuration.overhaul.fissionMSR.blocks.add(mmagnesium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pmagnesium);ncpf.configuration.overhaul.fissionMSR.blocks.add(pmagnesium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mmanganese);ncpf.configuration.overhaul.fissionMSR.blocks.add(mmanganese);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pmanganese);ncpf.configuration.overhaul.fissionMSR.blocks.add(pmanganese);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(maluminum);ncpf.configuration.overhaul.fissionMSR.blocks.add(maluminum);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(paluminum);ncpf.configuration.overhaul.fissionMSR.blocks.add(paluminum);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(msilver);ncpf.configuration.overhaul.fissionMSR.blocks.add(msilver);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(psilver);ncpf.configuration.overhaul.fissionMSR.blocks.add(psilver);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mfluorite);ncpf.configuration.overhaul.fissionMSR.blocks.add(mfluorite);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pfluorite);ncpf.configuration.overhaul.fissionMSR.blocks.add(pfluorite);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mvilliaumite);ncpf.configuration.overhaul.fissionMSR.blocks.add(mvilliaumite);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pvilliaumite);ncpf.configuration.overhaul.fissionMSR.blocks.add(pvilliaumite);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mcarobbiite);ncpf.configuration.overhaul.fissionMSR.blocks.add(mcarobbiite);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pcarobbiite);ncpf.configuration.overhaul.fissionMSR.blocks.add(pcarobbiite);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(marsenic);ncpf.configuration.overhaul.fissionMSR.blocks.add(marsenic);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(parsenic);ncpf.configuration.overhaul.fissionMSR.blocks.add(parsenic);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mnitrogen);ncpf.configuration.overhaul.fissionMSR.blocks.add(mnitrogen);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pnitrogen);ncpf.configuration.overhaul.fissionMSR.blocks.add(pnitrogen);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mhelium);ncpf.configuration.overhaul.fissionMSR.blocks.add(mhelium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(phelium);ncpf.configuration.overhaul.fissionMSR.blocks.add(phelium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(menderium);ncpf.configuration.overhaul.fissionMSR.blocks.add(menderium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(penderium);ncpf.configuration.overhaul.fissionMSR.blocks.add(penderium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mcryotheum);ncpf.configuration.overhaul.fissionMSR.blocks.add(mcryotheum);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(pcryotheum);ncpf.configuration.overhaul.fissionMSR.blocks.add(pcryotheum);
        mstandard.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(0)));
        miron.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(1)));
        mredstone.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(2)));
        mquartz.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(3)));
        mobsidian.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(4)));
        mnetherBrick.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(5)));
        mglowstone.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(6)));
        mlapis.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(7)));
        mgold.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(8)));
        mprismarine.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(9)));
        mslime.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(10)));
        mendStone.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(11)));
        mpurpur.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(12)));
        mdiamond.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(13)));
        memerald.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(14)));
        mcopper.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(15)));
        mtin.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(16)));
        mlead.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(17)));
        mboron.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(18)));
        mlithium.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(19)));
        mmagnesium.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(20)));
        mmanganese.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(21)));
        maluminum.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(22)));
        msilver.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(23)));
        mfluorite.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(24)));
        mvilliaumite.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(25)));
        mcarobbiite.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(26)));
        marsenic.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(27)));
        mnitrogen.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(28)));
        mhelium.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(29)));
        menderium.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(30)));
        mcryotheum.rules.add(multiblock.configuration.overhaul.fissionmsr.PlacementRule.parseNC(ncpf.configuration.overhaul.fissionMSR, rules.getString(31)));
        multiblock.configuration.overhaul.fissionmsr.Block mgraphite = multiblock.configuration.overhaul.fissionmsr.Block.moderator("nuclearcraft:ingot_block:8", "Graphite Moderator", "overhaul/graphite", fluxFac.getInt(0), (float) modEff.getDouble(0));
        multiblock.configuration.overhaul.fissionmsr.Block mberyllium = multiblock.configuration.overhaul.fissionmsr.Block.moderator("nuclearcraft:ingot_block:9", "Beryllium Moderator", "overhaul/beryllium", fluxFac.getInt(1), (float) modEff.getDouble(1));
        multiblock.configuration.overhaul.fissionmsr.Block mheavyWater = multiblock.configuration.overhaul.fissionmsr.Block.moderator("nuclearcraft:heavy_water_moderator", "Heavy Water Moderator", "overhaul/heavy water", fluxFac.getInt(2), (float) modEff.getDouble(2));
        multiblock.configuration.overhaul.fissionmsr.Block mbec = multiblock.configuration.overhaul.fissionmsr.Block.reflector("nuclearcraft:fission_reflector:0", "Beryllium-Carbon Reflector", "overhaul/beryllium-carbon", (float) refEff.getDouble(0), (float) refRef.getDouble(0));
        multiblock.configuration.overhaul.fissionmsr.Block mpbs = multiblock.configuration.overhaul.fissionmsr.Block.reflector("nuclearcraft:fission_reflector:1", "Lead-Steel Reflector", "overhaul/lead-steel", (float) refEff.getDouble(1), (float) refRef.getDouble(1));
        multiblock.configuration.overhaul.fissionmsr.Block mbag = multiblock.configuration.overhaul.fissionmsr.Block.shield("nuclearcraft:fission_shield:0", "Boron-Silver Neutron Shield", "overhaul/boron-silver", "overhaul/boron-silver_closed", (int) shieldHeat.getDouble(0), (float) shieldEff.getDouble(0));
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe mirrec1 = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.irradiatorRecipe("nuclearcraft:dust:3", "Thorium Dust", "overhaul/item/thorium_dust", "nuclearcraft:fission_dust:3", "Protactinium-Enriched Thorium Dust", "overhaul/item/protactinium_enriched_thorium_dust", (float)irrEff.getDouble(0), (float)irrHeat.getDouble(0));
        mirrec1.inputLegacyNames.add("Thorium to Protactinium-Enriched Thorium");
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe mirrec2 = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.irradiatorRecipe("nuclearcraft:fission_dust:3", "Protactinium-Enriched Thorium Dust", "overhaul/item/protactinium_enriched_thorium_dust", "nuclearcraft:fission_dust:4", "Protactinium-233 Dust", "overhaul/item/protactinium_dust", (float)irrEff.getDouble(1), (float)irrHeat.getDouble(1));
        mirrec2.inputLegacyNames.add("Protactinium-Enriched Thorium to Protactinium-233");
        multiblock.configuration.overhaul.fissionmsr.BlockRecipe mirrec3 = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.irradiatorRecipe("nuclearcraft:fission_dust:0", "Bismuth Dust", "overhaul/item/bismuth_dust", "nuclearcraft:fission_dust:2", "Polonium Dust", "overhaul/item/polonium_dust", (float)irrEff.getDouble(2), (float)irrHeat.getDouble(2));
        mirrec3.inputLegacyNames.add("Bismuth Dust to Polonium Dust");
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mgraphite);ncpf.configuration.overhaul.fissionMSR.blocks.add(mgraphite);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mberyllium);ncpf.configuration.overhaul.fissionMSR.blocks.add(mberyllium);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mheavyWater);ncpf.configuration.overhaul.fissionMSR.blocks.add(mheavyWater);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mbec);ncpf.configuration.overhaul.fissionMSR.blocks.add(mbec);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mpbs);ncpf.configuration.overhaul.fissionMSR.blocks.add(mpbs);
        ncpf.configuration.overhaul.fissionMSR.allBlocks.add(mbag);ncpf.configuration.overhaul.fissionMSR.blocks.add(mbag);
        mirradiator.allRecipes.add(mirrec1);mirradiator.recipes.add(mirrec1);
        mirradiator.allRecipes.add(mirrec2);mirradiator.recipes.add(mirrec2);
        mirradiator.allRecipes.add(mirrec3);mirradiator.recipes.add(mirrec3);
        addMSRFuels(vessel, fission, fuelTimeMult, "thorium", null, null, null, null, "TBU Fluoride");
        addMSRFuels(vessel, fission, fuelTimeMult, "uranium", null, null, null, null, "LEU-233 Fluoride", null, null, null, null, "HEU-233 Fluoride", null, null, null, null, "LEU-235 Fluoride", null, null, null, null, "HEU-235 Fluoride");
        addMSRFuels(vessel, fission, fuelTimeMult, "neptunium", null, null, null, null, "LEN-236 Fluoride", null, null, null, null, "HEN-236 Fluoride");
        addMSRFuels(vessel, fission, fuelTimeMult, "plutonium", null, null, null, null, "LEP-239 Fluoride", null, null, null, null, "HEP-239 Fluoride", null, null, null, null, "LEP-241 Fluoride", null, null, null, null, "HEP-241 Fluoride");
        addMSRFuels(vessel, fission, fuelTimeMult, "mixed", null, null, null, null, "MF4-239", null, null, null, null, "MF4-241");
        addMSRFuels(vessel, fission, fuelTimeMult, "americium", null, null, null, null, "LEA-242 Fluoride", null, null, null, null, "HEA-242 Fluoride");
        addMSRFuels(vessel, fission, fuelTimeMult, "curium", null, null, null, null, "LECm-243 Fluoride", null, null, null, null, "HECm-243 Fluoride", null, null, null, null, "LECm-245 Fluoride", null, null, null, null, "HECm-245 Fluoride", null, null, null, null, "LECm-247 Fluoride", null, null, null, null, "HECm-247 Fluoride");
        addMSRFuels(vessel, fission, fuelTimeMult, "berkelium", null, null, null, null, "LEB-248 Fluoride", null, null, null, null, "HEB-248 Fluoride");
        addMSRFuels(vessel, fission, fuelTimeMult, "californium", null, null, null, null, "LECf-249 Fluoride", null, null, null, null, "HECf-249 Fluoride", null, null, null, null, "LECf-251 Fluoride", null, null, null, null, "HECf-251 Fluoride");
//</editor-fold>
        //<editor-fold defaultstate="collapsed" desc="Turbine">
        ncpf.configuration.overhaul.turbine = new multiblock.configuration.overhaul.turbine.TurbineConfiguration();
        multiblock.configuration.overhaul.turbine.Block tcontroller = multiblock.configuration.overhaul.turbine.Block.controller("nuclearcraft:turbine_controller", "Turbine Controller", "overhaul/turbine/controller");
        multiblock.configuration.overhaul.turbine.Block tcasing = multiblock.configuration.overhaul.turbine.Block.casing("nuclearcraft:turbine_casing", "Turbine Casing", "overhaul/turbine/casing", true);
        multiblock.configuration.overhaul.turbine.Block ttransparentCasing = multiblock.configuration.overhaul.turbine.Block.casing("nuclearcraft:turbine_glass", "Turbine Glass", "overhaul/turbine/glass", false);
        multiblock.configuration.overhaul.turbine.Block tinlet = multiblock.configuration.overhaul.turbine.Block.inlet("nuclearcraft:turbine_inlet", "Fluid Inlet", "overhaul/turbine/inlet");
        multiblock.configuration.overhaul.turbine.Block toutlet = multiblock.configuration.overhaul.turbine.Block.outlet("nuclearcraft:turbine_outlet", "Fluid Outlet", "overhaul/turbine/outlet");
        ncpf.configuration.overhaul.turbine.blocks.add(tcontroller);ncpf.configuration.overhaul.turbine.allBlocks.add(tcontroller);
        ncpf.configuration.overhaul.turbine.blocks.add(tcasing);ncpf.configuration.overhaul.turbine.allBlocks.add(tcasing);
        ncpf.configuration.overhaul.turbine.blocks.add(ttransparentCasing);ncpf.configuration.overhaul.turbine.allBlocks.add(ttransparentCasing);
        ncpf.configuration.overhaul.turbine.blocks.add(tinlet);ncpf.configuration.overhaul.turbine.allBlocks.add(tinlet);
        ncpf.configuration.overhaul.turbine.blocks.add(toutlet);ncpf.configuration.overhaul.turbine.allBlocks.add(toutlet);
        ncpf.configuration.overhaul.turbine.fluidPerBlade = turbine.getInt("turbine_mb_per_blade");
        ncpf.configuration.overhaul.turbine.minLength = turbine.getInt("turbine_min_size");
        ncpf.configuration.overhaul.turbine.minWidth = Math.max(3, turbine.getInt("turbine_min_size"));
        ncpf.configuration.overhaul.turbine.maxSize = turbine.getInt("turbine_max_size");
        ConfigList effLenParams = turbine.getConfigList("turbine_throughput_leniency_params");
        ncpf.configuration.overhaul.turbine.throughputEfficiencyLeniencyMult = (float)effLenParams.getDouble(0);
        ncpf.configuration.overhaul.turbine.throughputEfficiencyLeniencyThreshold = (float)effLenParams.getDouble(1);
        ncpf.configuration.overhaul.turbine.throughputFactor = (float)turbine.getDouble("turbine_tension_throughput_factor");
        ncpf.configuration.overhaul.turbine.powerBonus = (float)turbine.getDouble("turbine_power_bonus_multiplier");
        ConfigList bladeEffs = turbine.getConfigList("turbine_blade_efficiency");
        ConfigList bladeExps = turbine.getConfigList("turbine_blade_expansion");
        multiblock.configuration.overhaul.turbine.Block steel = multiblock.configuration.overhaul.turbine.Block.blade("nuclearcraft:turbine_rotor_blade_steel", "Steel Rotor Blade", "overhaul/turbine/steel", (float)bladeEffs.getDouble(0), (float)bladeExps.getDouble(0));
        multiblock.configuration.overhaul.turbine.Block extreme = multiblock.configuration.overhaul.turbine.Block.blade("nuclearcraft:turbine_rotor_blade_extreme", "Extreme Alloy Rotor Blade", "overhaul/turbine/extreme", (float)bladeEffs.getDouble(1), (float)bladeExps.getDouble(1));
        multiblock.configuration.overhaul.turbine.Block sic = multiblock.configuration.overhaul.turbine.Block.blade("nuclearcraft:turbine_rotor_blade_sic_sic_cmc", "SiC-SiC CMC Rotor Blade", "overhaul/turbine/sic", (float)bladeEffs.getDouble(2), (float)bladeExps.getDouble(2));
        multiblock.configuration.overhaul.turbine.Block stator = multiblock.configuration.overhaul.turbine.Block.stator("nuclearcraft:turbine_rotor_stator", "Rotor Stator", "overhaul/turbine/stator", (float)turbine.getDouble("turbine_stator_expansion"));
        ncpf.configuration.overhaul.turbine.allBlocks.add(steel);ncpf.configuration.overhaul.turbine.blocks.add(steel);
        ncpf.configuration.overhaul.turbine.allBlocks.add(extreme);ncpf.configuration.overhaul.turbine.blocks.add(extreme);
        ncpf.configuration.overhaul.turbine.allBlocks.add(sic);ncpf.configuration.overhaul.turbine.blocks.add(sic);
        ncpf.configuration.overhaul.turbine.allBlocks.add(stator);ncpf.configuration.overhaul.turbine.blocks.add(stator);
        ConfigList coilEffs = turbine.getConfigList("turbine_coil_conductivity");
        ConfigList coilRules = turbine.getConfigList("turbine_coil_rule");
        multiblock.configuration.overhaul.turbine.Block cmagnesium = multiblock.configuration.overhaul.turbine.Block.coil("nuclearcraft:turbine_dynamo_coil:0", "Magnesium Dynamo Coil", "overhaul/turbine/magnesium", (float)coilEffs.getDouble(0));
        multiblock.configuration.overhaul.turbine.Block cberyllium = multiblock.configuration.overhaul.turbine.Block.coil("nuclearcraft:turbine_dynamo_coil:1", "Beryllium Dynamo Coil", "overhaul/turbine/beryllium", (float)coilEffs.getDouble(1));
        multiblock.configuration.overhaul.turbine.Block caluminum = multiblock.configuration.overhaul.turbine.Block.coil("nuclearcraft:turbine_dynamo_coil:2", "Aluminum Dynamo Coil", "overhaul/turbine/aluminum", (float)coilEffs.getDouble(2));
        multiblock.configuration.overhaul.turbine.Block cgold = multiblock.configuration.overhaul.turbine.Block.coil("nuclearcraft:turbine_dynamo_coil:3", "Gold Dynamo Coil", "overhaul/turbine/gold", (float)coilEffs.getDouble(3));
        multiblock.configuration.overhaul.turbine.Block ccopper = multiblock.configuration.overhaul.turbine.Block.coil("nuclearcraft:turbine_dynamo_coil:4", "Copper Dynamo Coil", "overhaul/turbine/copper", (float)coilEffs.getDouble(4));
        multiblock.configuration.overhaul.turbine.Block csilver = multiblock.configuration.overhaul.turbine.Block.coil("nuclearcraft:turbine_dynamo_coil:5", "Silver Dynamo Coil", "overhaul/turbine/silver", (float)coilEffs.getDouble(5));
        multiblock.configuration.overhaul.turbine.Block connector = multiblock.configuration.overhaul.turbine.Block.connector("nuclearcraft:turbine_coil_connector", "Dynamo Coil Connector", "overhaul/turbine/connector");
        multiblock.configuration.overhaul.turbine.Block bearing = multiblock.configuration.overhaul.turbine.Block.bearing("nuclearcraft:turbine_rotor_bearing", "Rotor Bearing", "overhaul/turbine/bearing");
        multiblock.configuration.overhaul.turbine.Block shaft = multiblock.configuration.overhaul.turbine.Block.shaft("nuclearcraft:turbine_rotor_shaft", "Rotor Shaft", "overhaul/turbine/shaft");
        ncpf.configuration.overhaul.turbine.allBlocks.add(bearing);ncpf.configuration.overhaul.turbine.blocks.add(bearing);
        ncpf.configuration.overhaul.turbine.allBlocks.add(shaft);ncpf.configuration.overhaul.turbine.blocks.add(shaft);
        ncpf.configuration.overhaul.turbine.allBlocks.add(cmagnesium);ncpf.configuration.overhaul.turbine.blocks.add(cmagnesium);
        ncpf.configuration.overhaul.turbine.allBlocks.add(cberyllium);ncpf.configuration.overhaul.turbine.blocks.add(cberyllium);
        ncpf.configuration.overhaul.turbine.allBlocks.add(caluminum);ncpf.configuration.overhaul.turbine.blocks.add(caluminum);
        ncpf.configuration.overhaul.turbine.allBlocks.add(cgold);ncpf.configuration.overhaul.turbine.blocks.add(cgold);
        ncpf.configuration.overhaul.turbine.allBlocks.add(ccopper);ncpf.configuration.overhaul.turbine.blocks.add(ccopper);
        ncpf.configuration.overhaul.turbine.allBlocks.add(csilver);ncpf.configuration.overhaul.turbine.blocks.add(csilver);
        ncpf.configuration.overhaul.turbine.allBlocks.add(connector);ncpf.configuration.overhaul.turbine.blocks.add(connector);
        connector.rules.add(multiblock.configuration.overhaul.turbine.PlacementRule.parseNC(ncpf.configuration.overhaul.turbine, turbine.getConfigList("turbine_connector_rule").getString(0)));
        cmagnesium.rules.add(multiblock.configuration.overhaul.turbine.PlacementRule.parseNC(ncpf.configuration.overhaul.turbine, coilRules.getString(0)));
        cberyllium.rules.add(multiblock.configuration.overhaul.turbine.PlacementRule.parseNC(ncpf.configuration.overhaul.turbine, coilRules.getString(1)));
        caluminum.rules.add(multiblock.configuration.overhaul.turbine.PlacementRule.parseNC(ncpf.configuration.overhaul.turbine, coilRules.getString(2)));
        cgold.rules.add(multiblock.configuration.overhaul.turbine.PlacementRule.parseNC(ncpf.configuration.overhaul.turbine, coilRules.getString(3)));
        ccopper.rules.add(multiblock.configuration.overhaul.turbine.PlacementRule.parseNC(ncpf.configuration.overhaul.turbine, coilRules.getString(4)));
        csilver.rules.add(multiblock.configuration.overhaul.turbine.PlacementRule.parseNC(ncpf.configuration.overhaul.turbine, coilRules.getString(5)));
        ConfigList rPows = turbine.getConfigList("turbine_power_per_mb");
        ConfigList rCoeffs = turbine.getConfigList("turbine_expansion_level");
        multiblock.configuration.overhaul.turbine.Recipe hps = multiblock.configuration.overhaul.turbine.Recipe.recipe("high_pressure_steam", "High Pressure Steam", "fluids/hps", "exhaust_steam", "Exhaust Steam", "fluids/exhaust_steam", rPows.getDouble(0), rCoeffs.getDouble(0));
        multiblock.configuration.overhaul.turbine.Recipe lps = multiblock.configuration.overhaul.turbine.Recipe.recipe("low_pressure_steam", "Low Pressure Steam", "fluids/lps", "low_quality_steam", "Low Quality Steam", "fluids/lqs", rPows.getDouble(1), rCoeffs.getDouble(1));
        multiblock.configuration.overhaul.turbine.Recipe ste = multiblock.configuration.overhaul.turbine.Recipe.recipe("steam", "Steam", "fluids/steam", "low_quality_steam", "Low Quality Steam", "fluids/lqs", rPows.getDouble(2), rCoeffs.getDouble(2));
        ncpf.configuration.overhaul.turbine.allRecipes.add(hps);ncpf.configuration.overhaul.turbine.recipes.add(hps);
        ncpf.configuration.overhaul.turbine.allRecipes.add(lps);ncpf.configuration.overhaul.turbine.recipes.add(lps);
        ncpf.configuration.overhaul.turbine.allRecipes.add(ste);ncpf.configuration.overhaul.turbine.recipes.add(ste);
//</editor-fold>
        return ncpf;
    }
    private void addSFRFuels(Block cell, Config config, double timeMult, String baseName, String... fuelNames){
        ConfigList time = config.getConfigList("fission_"+baseName+"_fuel_time");
        ConfigList heat = config.getConfigList("fission_"+baseName+"_heat_generation");
        ConfigList efficiency = config.getConfigList("fission_"+baseName+"_efficiency");
        ConfigList criticality = config.getConfigList("fission_"+baseName+"_criticality");
        ConfigList selfPriming = config.getConfigList("fission_"+baseName+"_self_priming");
        for(int i = 0; i<fuelNames.length; i++){
            if(fuelNames[i]==null)continue;
            int fuelIndex = i-i/5;
            String tex = Core.superReplace(fuelNames[i].toLowerCase(), " oxide", "_ox", "-", "_", " nitride", "_ni", "_zirconium alloy", "_za");
            BlockRecipe fuel = BlockRecipe.fuel("nuclearcraft:fuel_"+baseName+":"+fuelIndex, fuelNames[i], "overhaul/fuel/"+tex, "nuclearcraft:depleted_fuel_"+baseName+":"+fuelIndex, "Depleted "+fuelNames[i], "overhaul/fuel/depleted/"+tex, (float)efficiency.getDouble(i), heat.getInt(i), (int)(time.getInt(i)*timeMult), criticality.getInt(i), selfPriming.getBoolean(i));
            cell.allRecipes.add(fuel);cell.recipes.add(fuel);
        }
    }
    private void addMSRFuels(multiblock.configuration.overhaul.fissionmsr.Block vessel, Config config, double timeMult, String baseName, String... fuelNames){
        ConfigList time = config.getConfigList("fission_"+baseName+"_fuel_time");
        ConfigList heat = config.getConfigList("fission_"+baseName+"_heat_generation");
        ConfigList efficiency = config.getConfigList("fission_"+baseName+"_efficiency");
        ConfigList criticality = config.getConfigList("fission_"+baseName+"_criticality");
        ConfigList selfPriming = config.getConfigList("fission_"+baseName+"_self_priming");
        for(int i = 0; i<fuelNames.length; i++){
            if(fuelNames[i]==null)continue;
            String baseNam = Core.superReplace(fuelNames[i].toLowerCase(), "-", "_", " ", "_", "mf4","mix")+"_flibe";
            if(baseName.equals("mixed"))baseNam = Core.superReplace(fuelNames[i].toLowerCase(), "-", "_", " ", "_", "mf4","mix")+"_fluoride_flibe";
            String tex = Core.superReplace(fuelNames[i].toLowerCase(), "-", "_", " fluoride", "", "mf4","mix");
            multiblock.configuration.overhaul.fissionmsr.BlockRecipe fuel = multiblock.configuration.overhaul.fissionmsr.BlockRecipe.fuel(baseNam, fuelNames[i], "overhaul/fuel/msr/"+tex, "depleted_"+baseNam, "Depleted "+fuelNames[i], "overhaul/fuel/depleted/msr/"+tex, (float)efficiency.getDouble(i), heat.getInt(i), (int)(time.getInt(i)*timeMult), criticality.getInt(i), selfPriming.getBoolean(i));
            vessel.allRecipes.add(fuel);vessel.recipes.add(fuel);
        }
    }
}